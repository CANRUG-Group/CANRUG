name: Build and Deploy CANRUG Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true  # needed for pushing commits

      # Step 2: Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 3: Install dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Debug API key
      - name: Debug API key
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          echo "Checking GOOGLE_API_KEY..."
          if [ -z "$GOOGLE_API_KEY" ]; then
            echo "❌ GOOGLE_API_KEY is not set"
            exit 1
          else
            echo "✅ GOOGLE_API_KEY is set (length: ${#GOOGLE_API_KEY})"
          fi

      # Step 5: Fetch Google Calendar events
      - name: Fetch Google Calendar events
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        run: |
          set -e
          echo "Fetching events..."
          python events-fetcher.py
          
          echo "Checking events.json..."
          if [ ! -f events.json ]; then
            echo "❌ events.json not found"
            exit 1
          fi
          
          echo "✅ events.json exists"
          echo "First 20 lines:"
          head -n 20 events.json

      # Step 6: Commit updated events.json
      - name: Commit updated events.json
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add events.json
          if git diff --cached --quiet; then
            echo "No changes in events.json, skipping commit"
          else
            git commit -m "Update events.json from GitHub Actions"
            git push origin main
            echo "✅ events.json updated and pushed"
          fi

      # Step 7: Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v3

      # Step 8: Upload artifact
      - name: Upload repo root
        uses: actions/upload-pages-artifact@v2
        with:
          path: '.'  # deploy everything from repo root

      # Step 9: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
